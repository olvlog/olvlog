---
layout: post
title:  "HTTP"
date:   2017-03-26 16:45:11 +0500
categories: docs
---
HTTP — протокол прикладного уровня передачи данных между клиентом и сервером. Определён в [RFC 2616].
Объектом передачи может быть как гипертекстовый документ, так и абстрактная информация (например, отчёт о состоянии сервера).

## Клиенты

* браузеры
* менеджеры закачек (по протоколу производится и полное, и частичное скачивание)
* приложения для скачивания обновлений
* программы, использующие HTTP API

## Серверы

* [nginx]
* [Apache]
* [IIS]

## Формат запроса

Запрос отправляется в текстовом формате.

{% highlight text %}
<МЕТОД> <URI запрашиваемого документа> HTTP/<ВЕРСИЯ>
<ЗАГОЛОВОК1>: <ЗНАЧЕНИЕ>
<ЗАГОЛОВОК2>: <ЗНАЧЕНИЕ>
<ЗАГОЛОВОК3>: <ЗНАЧЕНИЕ>
...

[ТЕЛО СООБЩЕНИЯ]
{% endhighlight %}

### Основные методы:
- GET — запрос содержимого указанного ресурса,идемпотентный (многократное повторение запроса имеет тот же результат, что и один запрос)
- POST — для передачи пользовательских данных ресурсу, неидемпотентный.
- DELETE — удаление указанного ресурса, идемпотентный.
- HEAD – для извлечения метаданных, валидации URL или проверки состояния.
- PUT — для загрузки содержимого запроса на указанный в запросе и соответствующий загружаемой информации URI.
- PATCH — аналогично PUT, но применяется только к фрагменту ресурса.
- OPTIONS — получение данных о возможностях сервера.

Все методы [в соответствующем разделе RFC 2616].

Клиент может передавать пользовательские параметры:

- в URI после знака ? при использовании метода GET.
{% highlight text %}
GET /path/resourse&param1=value1&param2=value2&param3=value3 HTTP/1.1
{% endhighlight %}
- в теле сообщения при использовании POST.

### Версии
Существуют 2 актуальные версии HTTP: 1.1, 2. Более ранние версии — 0.9 и 1.0 — считаются устаревшими.

### Заголовки
Все необходимые для функционирования HTTP заголовки описаны в основных [RFC]. Для создания нестандартных заголовков используется префикс X-.

*Примеры заголовков*
{% highlight text %}
If-Unmodified-Since: Sat, 29 Oct 2015 19:43:31 GMT
Accept-Language: ru, en-gb;q=0.8, en;q=0.7
{% endhighlight %}


## Формат ответа
Ответ сервера приходит также в текстовом формате.

{% highlight text %}
HTTP/{1.0, 1.1} <КОД СОСТОЯНИЯ> [ПОЯСНЕНИЕ]
<ЗАГОЛОВОК1>: <ЗНАЧЕНИЕ>
<ЗАГОЛОВОК2>: <ЗНАЧЕНИЕ>
<ЗАГОЛОВОК3>: <ЗНАЧЕНИЕ>
...

[ТЕЛО СООБЩЕНИЯ]
{% endhighlight %}

### Коды состояния
Код состояния — 3-значное число, первая цифра определяет тип:

- `1xx` Информационный — коды сообщают о процессе передачи данных (`100 Continue`).
- `2xx` Успех — успешное принятие и обработка запроса (`200 OK`, `201 Webpage Created`).
- `3xx` Перенаправление (Редирект) — необходимо сделать другой запрос по другому URI, адрес которого указывается в заголовке `Location`
(`301 Moved Permanently`, `302 Found`).
- `4xx` Ошибка на стороне клиента (`404 Not Found`, `401 Unauthorized`).
- `5xx` Ошибка на стороне сервера (`502 Bad Gateway`, `500 Internal Server Error`).

Все коды состояния [в соответствующем разделе RFC].

### Примеры заголовков

{% highlight text %}
Content-Encoding: gzip
Content-Length:	2 KBytes
Content-Type:	application/json; charset=UTF-8
{% endhighlight %}



[RFC 2616]: https://tools.ietf.org/html/rfc2616
[nginx]: https://nginx.org/en/
[Apache]: http://httpd.apache.org/
[IIS]: http://www.iis.net/
[в соответствующем разделе RFC 2616]: https://tools.ietf.org/html/rfc2616#page-51
[RFC]: https://tools.ietf.org/html/rfc2616#page-31
[в соответствующем разделе RFC]: https://tools.ietf.org/html/rfc2616#page-57
